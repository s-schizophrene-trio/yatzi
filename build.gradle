plugins {

    id 'java'
    id 'application'

    // OpenJFX Plugin
    id 'org.openjfx.javafxplugin' version '0.0.7'
    id "org.sonarqube" version "2.6"
}

archivesBaseName = 'yatzi-application'
group = 'ch.juventus.yatzi'
version = '0.0.1'
sourceCompatibility = '11.0'
targetCompatibility = '11.0'

test {
    useJUnitPlatform()
}

repositories {
    mavenCentral()
}

javafx {
    // Define all Modules needed for java FX
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics']
}

// Define the main class for the application
mainClassName = 'ch.juventus.yatzi.YatziApplication'

jar {
    manifest {
        attributes 'Implementation-Title': 'Yatzi Application',
                'Implementation-Version': version,
                'Main-Class': mainClassName
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

dependencies {

    // Prevent boiler plate code
    compileOnly "org.projectlombok:lombok:1.18.4"
    testCompileOnly "org.projectlombok:lombok:1.18.4"
    annotationProcessor "org.projectlombok:lombok:1.18.4"
    testAnnotationProcessor "org.projectlombok:lombok:1.18.4"

    // Logging
    implementation 'org.slf4j:slf4j-api:1.7.26'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'ch.qos.logback:logback-core:1.2.3'

    // Json
    implementation 'com.fasterxml.jackson.core:jackson-core:2.9.9'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.9.9'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.9'

    // Config
    compile group: 'org.aeonbits.owner', name: 'owner', version: '1.0.10'

    // Mocking
    implementation 'com.github.javafaker:javafaker:0.16'

    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    testImplementation 'org.hamcrest:hamcrest-library:2.1'
    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
}
